databases:
  - name: specialwash-db
    plan: free

services:
  # --- Backend Flask ---
  - type: web
    name: specialwash-backend
    runtime: python
    plan: free
    buildCommand: pip install -r requirements.txt || pip install -r backend/requirements.txt
    startCommand: gunicorn -w 2 -k gthread -t 120 -b 0.0.0.0:$PORT backend.app:app
    healthCheckPath: /api/health
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: specialwash-db
          property: connectionString
      - key: SECRET_KEY
        generateValue: true
      - key: JWT_SECRET_KEY
        generateValue: true
      - key: FLASK_ENV
        value: production
      # CORS: Permitimos el origen público del frontend en Render
      - key: CORS_ORIGINS
        fromService:
          name: specialwash-frontend
          type: web
          envVarKey: RENDER_EXTERNAL_URL

  # --- Frontend estático (Create React App build) ---
  - type: web
    name: specialwash-frontend
    runtime: static
    # Construye la app React (monorepo)
    buildCommand: cd specialwash-base-frontend && npm ci && npm run build
    # Publica la carpeta resultante del build (relativa a la raíz del repo)
    staticPublishPath: specialwash-base-frontend/build
    # Rewrites para React Router (SPA)
    routes:
      - type: rewrite
        source: /*
        destination: /index.html
    envVars:
      # La app React conocerá la URL del backend en Render
      - key: REACT_APP_BACKEND_URL
        fromService:
          name: specialwash-backend
          type: web
          envVarKey: RENDER_EXTERNAL_URL
